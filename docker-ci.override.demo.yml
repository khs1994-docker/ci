version: "3.8"

x-production:
  &production
  environment:
    - DRONE_SERVER_HOST=khs1994.jios.org:18000
    - DRONE_SERVER_PROTO={{ DRONE_SERVER_PROTO }}
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:-secret}
    - DRONE_USER_CREATE=${DRONE_USER_CREATE}
    - DRONE_USER_FILTER=${DRONE_USER_FILTER:?DRONE_USER_FILTER}
    #
    - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID_TEST:?DRONE_GITHUB_CLIENT_ID_TEST}
    - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET_TEST:?DRONE_GITHUB_CLIENT_SECRET_TEST}
    #
    # - DRONE_DATABASE_DRIVER={{ DB_TYPE }}
    # - DRONE_DATABASE_DATASOURCE={{ DB_USERNAME }}:{{ DB_PASSWORD }}@tcp({{ DB_HOST }})/{{ DB_DATABASE }}?parseTime=true
    # - DRONE_GITHUB_SERVER=https://github.com
    # - DRONE_TLS_KEY=/etc/drone/ssl/${CI_DOMAIN}.key
    # - DRONE_TLS_CERT=/etc/drone/ssl/${CI_DOMAIN}.crt

x-gogs:
  &gogs
  environment:
    - DRONE_SERVER_HOST={{ DRONE_SERVER_HOST }}
    - DRONE_SERVER_PROTO={{ DRONE_SERVER_PROTO }}
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
    #
    - DRONE_GOGS_SERVER={{ DRONE_GOGS_SERVER }}
    - DRONE_TLS_AUTOCERT=false
    #
    - DRONE_DATABASE_DRIVER={{ DB_TYPE }}
    - DRONE_DATABASE_DATASOURCE={{ DB_USERNAME }}:{{ DB_PASSWORD }}@tcp({{ DB_HOST }})/gogs?parseTime=true
    # - DRONE_TLS_KEY=/etc/drone/ssl/${CI_DOMAIN}.key
    # - DRONE_TLS_CERT=/etc/drone/ssl/${CI_DOMAIN}.crt

x-github:
  &github
  environment:
    - DRONE_GITHUB_SERVER=${DRONE_GITHUB_SERVER:-https://github.com}
    - DRONE_SERVER_HOST={{ DRONE_SERVER_HOST }}
    - DRONE_SERVER_PROTO={{ DRONE_SERVER_PROTO }}
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:-secret}
    #
    - DRONE_USER_CREATE=${DRONE_USER_CREATE}
    - DRONE_USER_FILTER=${DRONE_USER_FILTER:?DRONE_USER_FILTER}
    - DRONE_GITHUB_CLIENT_ID=${DRONE_GITHUB_CLIENT_ID:?DRONE_GITHUB_CLIENT_ID}
    - DRONE_GITHUB_CLIENT_SECRET=${DRONE_GITHUB_CLIENT_SECRET:?DRONE_GITHUB_CLIENT_SECRET}
    #
    - DRONE_DATABASE_DRIVER={{ DB_TYPE }}
    - DRONE_DATABASE_DATASOURCE={{ DB_USERNAME }}:{{ DB_PASSWORD }}@tcp({{ DB_HOST }})/gogs?parseTime=true
    # - DRONE_TLS_KEY=/etc/drone/ssl/${CI_DOMAIN}.key
    # - DRONE_TLS_CERT=/etc/drone/ssl/${CI_DOMAIN}.crt

x-gitlab:
  &gitlab
  environment:
    - DRONE_SERVER_HOST={{ DRONE_SERVER_HOST }}
    - DRONE_SERVER_PROTO={{ DRONE_SERVER_PROTO }}
    - DRONE_RPC_SECRET=${DRONE_RPC_SECRET:-secret}
    #
    - DRONE_GITLAB_CLIENT_ID=${DRONE_GITLAB_CLIENT_ID}
    - DRONE_GITLAB_CLIENT_SECRET=${DRONE_GITLAB_CLIENT_SECRET}
    - DRONE_GITLAB_SERVER={{ DRONE_GITLAB_SERVER }}
    #
    - DRONE_DATABASE_DRIVER={{ DB_TYPE }}
    - DRONE_DATABASE_DATASOURCE={{ DB_USERNAME }}:{{ DB_PASSWORD }}@tcp({{ DB_HOST }})/gogs?parseTime=true
    # - DRONE_TLS_KEY=/etc/drone/ssl/${CI_DOMAIN}.key
    # - DRONE_TLS_CERT=/etc/drone/ssl/${CI_DOMAIN}.crt

services:
  drone-server:
    << : *gogs
    # << : *github
    # << : *gitlab
    # << : *production
    volumes:
      - ./config/nginx/ssl:/etc/drone/ssl
    ports:
      # - 80:80
      # - 443:443
      - "${CI_HOST:?CI_HOST}:${CI_DRONE_PORT:-8000}:80"
      # - 9000:9000

  drone-docker-runner:
    # ports:
    #   - 3000:3000

# networks:
#   backend:
#     external: true
#     name: lnmp_backend
#   frontend:
#     external: true
#     name: lnmp_frontend
