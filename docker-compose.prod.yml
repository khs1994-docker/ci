version: '3.4'
services:

  drone-server:
    image: drone/drone:${DRONE_VERSION}
    ports:
      # - 80:80
      # - 443:443
      - "${PRO_PUBLIC_IP}:8000:8000"
      # - 9000:9000
    volumes:
      - drone-data:/var/lib/drone/:rw
      # - ${SSL_PATH}:/etc/certs
    restart: always
    environment:
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_OPEN=false
      - DRONE_ADMIN=khs1994,khs1994-merge-robot
      - DRONE_HOST=${DRONE_HOST_PRO}
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT_PRO}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET_PRO}

  drone-agent:
    image: drone/agent:${DRONE_VERSION}
    restart: always
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    environment:
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_SERVER=drone-server:9000
    dns: ${DNS}

  # gogs:
  #   image: gogs/gogs
  #   ports:
  #     - "${SSH_PORT}:22"
  #     - "${PUBLIC_IP}:10080:3000"
  #   volumes:
  #     - gogs-data:/data:rw
  #     - ./gogs/app.prod.ini:/data/gogs/conf/app.ini:ro
  #     - ${SSL_PATH}:/data/ssl:rw
  #   extra_hosts:
  #     - "drone.${DOMAIN}:${DRONE_IP}"
  #
  # mysql:
  #   image: mysql:${MYSQL_VERSION}
  #   networks:
  #     backend:
  #   env_file: env/mysql.env
  #   # ports:
  #     # - "3306:3306"
  #   volumes:
  #     - mysql-data:/var/lib/mysql:rw
  #   command: ["mysqld","--character-set-server=utf8mb4"]
  #
  # registry:
  #   image: registry
  #   ports:
  #     - "${PUBLIC_IP}:5000:5000"
  #   volumes:
  #     - registry-data:/var/lib/registry:rw

  # nginx:
  #   image: khs1994/nginx:${NGINX_VERSION}-alpine
  #   env_file: .env
  #   ports:
  #     - "443:443"
  #   volumes:
  #     - ./conf.d:/etc/nginx/conf.d

  # webhooks:
  #   build:
  #     context: webhooks
  #   image: khs1994/ci
  #   ports:
  #     - "7777:7777"

volumes:
  gogs-data:
  # mysql-data:
  drone-data:
  # registry-data:
