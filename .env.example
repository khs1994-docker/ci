#
#
#  简化版 -> 基于端口的 CI/CD 部署方案
#
#

DRONE_HOST_BASED_PORT=192.168.199.100

DRONE_PORT_BASED_PORT=8000

GOGS_PORT_BASED_PORT=3000

GOGS_SSH_PORT_BASED_PORT=8022

MYSQL_PORT_BASED_PORT=13306

REGISTRY_PORT_BASED_PORT=5000

REDIS_PORT_BASED_PORT=16379

#
# 简化版 END
#

#
#

DOMAIN=t.khs1994.com

#
# 生产环境公网 IP
#

PRO_PUBLIC_IP=10.141.20.83

PUBLIC_IP=0.0.0.0

#
# 开发环境使用 Gogs
#

DRONE_IP=192.168.199.100

#
# SSH 端口
#

SSH_PORT=8022

TZ=Asia/Shanghai

#
# [Docker Image Tag]
#

DRONE_VERSION=0.8.4
NGINX_VERSION=1.13.9
REDIS_VERSION=4.0.8

#
# [SSL]
#

SSL_PATH=./conf.d/ssl

#
# [Drone]
# 请务必修改
#

DRONE_SECRET=khs1994
DRONE_OPEN=true
DRONE_HOST=https://drone.t.khs194.com

#
# 生产环境 drone 域名
#

DRONE_HOST_PRO=https://drone.khs1994.com

#
# [Drone Gogs]
#

DRONE_GOGS=true
DRONE_GOGS_URL=https://git.t.khs1994.com

#
# [Drone GitHub]
#

DRONE_GITHUB_CLIENT_PRO=
DRONE_GITHUB_SECRET_PRO=

#
# Use in local development
#

DRONE_GITHUB_CLIENT_TEST=
DRONE_GITHUB_SECRET_TEST=

#
# [Drone Coding]
# [Drone Coding khs1994.com DON'T EDIT IT]
#

DRONE_CODING_CLIENT=
DRONE_CODING_SECRET=

#
# 不使用 Drone 的 80 端口，无需配置 SSL 证书。
# [Drone HTTPS SSL]
#

#
# DRONE_SERVER_CERT=/etc/certs/drone.t.khs1994.com.crt
# DRONE_SERVER_KEY=/etc/certs/drone.t.khs1994.com.key
#
