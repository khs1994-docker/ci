apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ingress-nginx-tls-0.0.1
  labels:
    app: ci
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUc4VENDQk5tZ0F3SUJBZ0lKQU5XUkI1R3k1ZVZOTUEwR0NTcUdTSWIzRFFFQkN3VUFNSUdDTVFzd0NRWUQKVlFRR0V3SkRUakVQTUEwR0ExVUVDQXdHVTJoaGJuaHBNUTh3RFFZRFZRUUhEQVpFWVhSdmJtY3hHVEFYQmdOVgpCQW9NRUVGQlFVRXRhMmh6TVRrNU5DNWpiMjB4SERBYUJnTlZCQU1NRTJ0b2N6RTVPVFF1WTI5dElGSlBUMVFnClEwRXhHREFXQmdOVkJBc01EM2QzZHk1cmFITXhPVGswTG1OdmJUQWVGdzB4T0RBek1UZ3hOVEV6TXpCYUZ3MHkKTURBME1EWXhOVEV6TXpCYU1HTXhDekFKQmdOVkJBWVRBa05PTVE4d0RRWURWUVFJREFaVGFHRnVlR2t4RHpBTgpCZ05WQkFjTUJrUmhkRzl1WnpFYU1CZ0dBMVVFQ2d3UldXOTFjaUJEYjIxd1lXNTVJRTVoYldVeEZqQVVCZ05WCkJBTU1EWFF1YTJoek1UazVOQzVqYjIwd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUMKQVFERGk3VUpPdXc0L0hmUUZoa2twSHBWTng2ek5yejh6RFdaYStRd3lsWERFNG9JN3ZpRDJRYXVnOUVvSHVpNgo2U0pyZHlEYXR6ZXdQbEh5aXE2eE5pVm9nWDErZStySk1tMUxGTXZoOENWbkpMNXFXdHZ5UzA0QW93djVGNHRXCmdIVTNZMFV4R0JOdThDR3gxZmhtWEVRRlY0TkIyVGk4T1dCbWhkVU1KMU12Q1N4UUQzenZvaTBiTHg4QkkvcUkKMUI5dEwyc0p0RTBjV2Z5Qk1kc0FhYTVpcHkyUGR0T1hZbEY5V240M2lVSVpLMmlrR1ZOK05kMURoODFETlhZVgpmSlVNeDBlMWh1RXZiRkhQV0doRkVJMWpjeUdTTUIycDJIZ0trd2xPTDQ1cmhnM0NXUGQzWjFpR04rVldpS3BzCmlJVXFtR2cwWjhGZW8xa012OHF5bFJCNy84UkdBeHE4bFBsSE12bDRqNDFTY2o1ZW9NY2pHVzl3aDM3c0NFTTYKY2U4SWU4T2Q5SzJDM0xOY3NITU8rbHFmMUgxR21CaUgwSFREZHlrRGhCUk5iWVQvNlRpdU8yRUJSenNwb2dJOQpWQVRqT2Y4dzVKYVVRaFd5clVqMXdPZTYxWEdPYjh4eklrY3g0eldNdlUxVkFIcklJQkd5d1g1U2Z4elFpdlk1CjRIMDMwRkUyQ2hrQTMzYzVUTFRkNG5JKy9CRjJ2VU9qaFN3TWJtSjQycURpbG80TzRhR1IyTFRoNUJHYTRyOHYKeS9GVjFCVHpSby9NZGx1S2lraHRqV0ZDSU5EUDMweWxEOStsaFl4RWczMkk0dU51OWFJVXc3MXNidWVaTStTRApiT2Jpdm1xa0JSM1h4bDRyR25LZEs3Z3lYcTJyTFFrZTl6SC9YT21raE4weDhRSURBUUFCbzRJQmhqQ0NBWUl3Ckh3WURWUjBqQkJnd0ZvQVVROUoxakRUY3BPdWc1TXdaTlhzZ2VBSGVMNUV3REFZRFZSMFRBUUgvQkFJd0FEQVQKQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQVRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSME9CQllFRkFJTQpJNU9VMGd4aW4vUGNjVitQekpVUkxzK05NSUlCQ3dZRFZSMFJCSUlCQWpDQi80SU5kQzVyYUhNeE9UazBMbU52CmJZSVBLaTUwTG10b2N6RTVPVFF1WTI5dGdoRndhSEF1ZEM1cmFITXhPVGswTG1OdmJZSVRLaTV3YUhBdWRDNXIKYUhNeE9UazBMbU52YlljRWZ3QUFBWUlKYkc5allXeG9iM04wZ2hka1pYWmxiRzl3WlhJdWRDNXJhSE14T1RrMApMbU52YllJWktpNWtaWFpsYkc5d1pYSXVkQzVyYUhNeE9UazBMbU52YllJRktpNWtaWGFDQnlvdWJHOWpZV3lDCkJpb3VkR1Z6ZElJTGEyaHpNVGs1TkM1a1pYYUNEU291YTJoek1UazVOQzVrWlhhQ0RHdG9jekU1T1RRdWRHVnoKZElJT0tpNXJhSE14T1RrMExuUmxjM1NDRFd0b2N6RTVPVFF1Ykc5allXeUNEeW91YTJoek1UazVOQzVzYjJOaApiREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBTkdYRG9yVlBlcC9HU0xOUVJ5cGRUY0Y2YkpoZHFCdHc1eEhFCnN6TE5DOUxRMCtMcUNjQ1hmMFAvcDErN0N2Z2xnc2x4VkhBOG5SK1YwdzlOOXNmTDJEQWZ6YkhRbWhSUk9IRFMKMm1vcUFSd2htRi9wTHB3M2xRMTBsMkV6VUI3ZXM5QTdDSGZXSUpxVVhVT0psQ3FmWUxZT3JkNHE0NmZSaVZGSAp4c0NLcGdkeVJUcjBGeDZjRzM5aUNyamZlWVduTi95ZzFYMEVPSW13YmpnT2VpcnJBZkZLdGdHZkY5Z3RvaEZGCmorN0Z5cGxSVGg2RDlPc3gzUmdsNC9IN1c5VmlZK1Y1cGFHM2NqcjlzUlZxczI1RFdydDF1MU9UZWl0bFBiT3UKemxrZjErYnNsRzZMVEJtdlBLckFYWXl1UUIrRkErOFYwQk9JNUtCaGx4WGFDVEFsTkxrUk01S1l3dlkzcUxuQgpQMk16UWhpVkJ4NWcrRTBBaERNR0ZrK2VVMjFsQWR0WCtxUWJZcExORCtaeE51c0FocGNZT2hqWlR5VjlNd0JOCjhnTStIMVZKeXJReG0rbDAxY1Q2SUVOY1ZZdWJQRlRiZE9vL0FlUXlWSzlzdVdJeitmeXc1d3kvanJxbGZlRzcKS3RRVk9ITU84QmJhVzBNTUtNKytvQVVOS1BKdWhDaEdNb1R1Vkg2cmZsdkhwWHhleGpIOEovVnE3ekthYXhZSQpLWkladXovZVdHeXExTTZVa0FqTW1LaXBjMU4wRVVKN0s0R1Y3OStvK2FPUzJRN1hhcEVvcERxTnIyN1NNbGFzCmVXdXhEd1VYUzZEMVdrTk10SXphUWJUcCtjaTU4UzRDRGZFQSszdGM3TU9LaGFZQVZFLzAzT25pMXk1Q2dLMWkKSDE2OGhWaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRnpqQ0NBN2FnQXdJQkFnSUpBT2lneWFsSnk5ZmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1JR0NNUXN3Q1FZRApWUVFHRXdKRFRqRVBNQTBHQTFVRUNBd0dVMmhoYm5ocE1ROHdEUVlEVlFRSERBWkVZWFJ2Ym1jeEdUQVhCZ05WCkJBb01FRUZCUVVFdGEyaHpNVGs1TkM1amIyMHhIREFhQmdOVkJBTU1FMnRvY3pFNU9UUXVZMjl0SUZKUFQxUWcKUTBFeEdEQVdCZ05WQkFzTUQzZDNkeTVyYUhNeE9UazBMbU52YlRBZUZ3MHhPREF4TURreE5ETTRNRFJhRncweQpPREF4TURjeE5ETTRNRFJhTUlHQ01Rc3dDUVlEVlFRR0V3SkRUakVQTUEwR0ExVUVDQXdHVTJoaGJuaHBNUTh3CkRRWURWUVFIREFaRVlYUnZibWN4R1RBWEJnTlZCQW9NRUVGQlFVRXRhMmh6TVRrNU5DNWpiMjB4SERBYUJnTlYKQkFNTUUydG9jekU1T1RRdVkyOXRJRkpQVDFRZ1EwRXhHREFXQmdOVkJBc01EM2QzZHk1cmFITXhPVGswTG1OdgpiVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFLQ0VEUHpoRmxJQ1RGeG9wT0I4CloxcGZhWGxTU2xJR2N1cFhQMHJoK0pCZ2JjazBycjNRNllFTHBSajZaRkJ0QUVIZ2JsRnZiOE1uZnVkbmxEMWEKVXRTa1JFRDREcGIrenZoNG8xYklxMVRKekM2WC9HaDZlaTdiTXppT1NZcG02alFIalJsVFZNQVdqV29zbHhMNwpDUENWTzdZclA1SEJGY2thS1NUeGpEMEdyOGVhOEtrYzd3eEFOOUhDNVBJVVl5aG9xN1lVbmxFL2o4R2J4NkhnCkFyektzYjBFNFhBQ0h0dWxVYUJMbkI0NUJrQ0tSZkJZUDFoNms4T1lEWmVrTTFDWTdRZVJUdGZWM2ZYUGVwZGMKd2xSVnlvNVovWTRTUWhnbUIvTk1uMjhIVEdjOXBzbGV6OUg1alpmMDFzaG94WFg0Zng5WDJaYmtMYitsVkVQMAp0SWV4ZXBKL1QzVDNvK0RvNnM0ZWFiYUhJRTIzbmgzNGFuYk5iSU80OGE2TGhiTW05ejFFOXdYcVkvaUYxVzBlCjdJMWVZeER6L3U4TzlsYjJpa1VQTW04SW1xZ2E4RDZQeUxWSm1JUUpFb0NtZEhZVWQ0QlkyRE5sUG5hSFJQOUoKUXJtMzVySXJXWkxUSnVkQ0pmU1B1bWU5QXlpMVg4aFp4OGQvTzkrTWhpV2xrSDhaczFyZXRXdUNHZlVOTWFJcQpkbmdCTGE4dDdJYSs0dXZHMm5HeXB0VHd5QmtMZVQvK0tranA4QkUxY01VVXNIQktCakVIZ1RmK2tuZGVrdUUxCkUwd1laWjVrM2RCWVgybTR1ZEV0b0RkdU5oU0U0YU9ycXdnbWtQR1hhOVlYT1NScW9tbmd3RStINkRlaFh1ZEsKU1NKMXJHZFgwWW9qV2dsakY1eEFiOEtYQWdNQkFBR2pSVEJETUJJR0ExVWRFd0VCL3dRSU1BWUJBZjhDQVFFdwpEZ1lEVlIwUEFRSC9CQVFEQWdGR01CMEdBMVVkRGdRV0JCUkQwbldNTk55azY2RGt6QmsxZXlCNEFkNHZrVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQUJhcE94Q29OOWFHZVdjOTZ3VHZldjB4TDMzUzkxRnFXRy9FZTdya00KWWtpMEQ4c0RXQVdCc2k3SkM2YXBkTkNEVWhubWdHdStVcnBvT2p1Z3cwSk9vT2pCeWpRT08vYndxYkRRSm9MUApuSGlWZ3NyMU5lYTJOOFBiT2JxdWpmdUlqQzNzVitudE5EM1pYU0IrdTNtY1RIYUpPU0E1Y0wvR0Y2Y1JDNzJmCnhjcE5Cc1QwaTRaWGR0UGFQTHVjSlIvcnIra2tRSkN3ZnBiTUM3eGgrelA1NW1keWZtb2dESDhZNTMyTlVUYnUKa2hnNW9ENGc2WlBIVlJrT1FadVlUcnNUR0szRjFrb20zYS82MTdFNFdIMjczZEo1N3JVREZxdTVGeHBjYkYwZwpqYWNkRHExUUpEcFl1YzM0WStWejA4TVBYMExzVUJ2cHZ0NVJwYlQvc3RtbTMzK296WGdPT0ZiNk9Ud1ZsTXp3ClhobXBlUVkwOFdxWVhTendteUdjbkVPcUVwdnI1R3UvTDY1T3R4MWhGUmVVcWpOWU56NFRwZ0hUT1d0QStINTYKTURFZ0VDc0Z5K1NWVEF5Uy8xOHhTU1VEdE9BbmZQVHdEMytiUGhHQko3bVRxYjloakdhUnZ3WDhLQWVPTU11WQp5N1lDUWpkelhJWFBYM1Mwc1Y4bjRkUVA0K1UvbmhMUm5SYUdSWko0cHhZT2xUUERPYlEzQVB3QUVCYmh1eCtsCkd1akZ4TFVrcWpBanJNVjNuQ1FpbGN4WGdzTDJwNEMwMFBRRGw4Y2pwV2RFTmd1UnlBZlBTVUxqb3FycC9rYXUKM25MQnlXZEpXRTQ1RC81K05jUGtydEtrWmI2cnFrakF4emFSUnNzWG5aSWR3cG5OVGFjQjFsc25uVGg1WXhiNgowNlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBdzR1MUNUcnNPUHgzMEJZWkpLUjZWVGNlc3phOC9NdzFtV3ZrTU1wVnd4T0tDTzc0Cmc5a0dyb1BSS0I3b3V1a2lhM2NnMnJjM3NENVI4b3F1c1RZbGFJRjlmbnZxeVRKdFN4VEw0ZkFsWnlTK2FscmIKOGt0T0FLTUwrUmVMVm9CMU4yTkZNUmdUYnZBaHNkWDRabHhFQlZlRFFkazR2RGxnWm9YVkRDZFRMd2tzVUE5OAo3Nkl0R3k4ZkFTUDZpTlFmYlM5ckNiUk5IRm44Z1RIYkFHbXVZcWN0ajNiVGwySlJmVnArTjRsQ0dTdG9wQmxUCmZqWGRRNGZOUXpWMkZYeVZETWRIdFliaEwyeFJ6MWhvUlJDTlkzTWhrakFkcWRoNENwTUpUaStPYTRZTndsajMKZDJkWWhqZmxWb2lxYklpRktwaG9OR2ZCWHFOWkRML0tzcFVRZS8vRVJnTWF2SlQ1UnpMNWVJK05VbkkrWHFESApJeGx2Y0lkKzdBaERPbkh2Q0h2RG5mU3RndHl6WExCekR2cGFuOVI5UnBnWWg5QjB3M2NwQTRRVVRXMkUvK2s0CnJqdGhBVWM3S2FJQ1BWUUU0em4vTU9TV2xFSVZzcTFJOWNEbnV0VnhqbS9NY3lKSE1lTTFqTDFOVlFCNnlDQVIKc3NGK1VuOGMwSXIyT2VCOU45QlJOZ29aQU45M09VeTAzZUp5UHZ3UmRyMURvNFVzREc1aWVOcWc0cGFPRHVHaAprZGkwNGVRUm11Sy9MOHZ4VmRRVTgwYVB6SFpiaW9wSWJZMWhRaURRejk5TXBRL2ZwWVdNUklOOWlPTGpidldpCkZNTzliRzdubVRQa2cyem00cjVxcEFVZDE4WmVLeHB5blN1NE1sNnRxeTBKSHZjeC8xenBwSVRkTWZFQ0F3RUEKQVFLQ0FnRUF1dEMyOVFtQThuUm90cmpWN29iZ2hKYnpVbjNDRWJXNm8wZExLejJ5cjNyMFRkS1lROFpNTnQraQpLN1ZUM0hXc040VUpNMHNFL2ZDYjg1NkFoTGJaQ0QxbHVqZ0N0NUxnalhGaDB3bk5nZnU5bXZnUTF5c1FhMVZaCnMvREZZcSs0ekdDZmt1YVFjbFVocTdkaTU4L1FBRlo2QktmVkp5V2RyblMvZEN3QnNaY082YkhTUjFIbHkrbTUKc2lwQVNRWjJ1NllvbVkzU2VYcVMzSTdYems0b2x3Rm1hb0E0WjVFN2p3bXNPYng5RkhTL05MOHBZQk52dnZ0MwpvM1RveW1CS09Yb05UU1I5OEFPSktSRXFGSWxhdXA4Y2ZJQlJacGx6SFk4WnZjTjdTY2c1VHVvV0NkSUc1YnR5Cjg3Zi9NVTlBQWRDM0JSSDIwRVk0WmhDNVF1RmNhNTRhR2lwdjFLajFrL0pmM0k5WFh3N3hHTHU0TWFETVJVc08KdGJlUnNjUVpkbDVuSjdxbXJzQzgvcFR3V2FzaXoycDR0K3BQWW1CUWdkelNkVzFUdTJQTlNkanlrcTRoSVVybAp0Z1VBQVBhc2JnS2xCV2FaRkhVbjZldWJBcHhQb3hCbFB1bnJFdXJlMGFHc3NZdHpwNFUycXh6di9UbEd1a1ptCnV6R0M2djJlTHpFNkMrYTkybWgzaythcFJ5SExFb0t4eis4RmlDdEtHbXVuMlI1SEJxNkNaYllPclVNU1Z5MFEKTGhLT1JvZCtWN1h6eHdCeGp1Z2EvejlmQ1ZHaWtNV2FvSWptRFBTcnlJaktFc3RLS28xVU5yV3dvTVlnYVlDWQpVUTl3QkVCOHFjYWppMTRRU2Fpcld2dW5TZzMwcWRNUWwwZW5EbDF2SmJkanE1ZC9TRkVDZ2dFQkFPOG4xdVJBClpSVTJZRVhvdHJyUEdxbmwrWGh5ejAwdnY3WUVHK1lIcFU2NkF2QklJTFM3djRFTDY2UTBaUVplcTg1cDZHRXAKdXQ2Q0RWcm13WnlSVHNPdzFZL3F2dCtyQnhtbDc3ZXBZU0plTGZ5dGpXeGdnNTVTdi96NU56ZWJDRE13VVN3RAovWXA3MEpjQ2RSR0QrZ0dkV2w1bjhjZVg0RUk5anhXVkhpNFJrVW1UVTVlSXBBMExCV3IwZTlaZmpxMU9QWS9ZCnJQbFM0aTBKcFhSM01FRXBucVdwajVMR0J1SGRDellKQWpMajBubWFOSHh6dno0VkNjOW1oV1k2MCt2WDdPbEEKWU1FS2dWM2Z6SUNVUm5tajZMdzFaRTVIdXp0ZUVPeWFtYzlDZWVxWG9oM1N6NXVXckE2WVFnSERMaFFqRVhKKwo3VUhZblh1VlZ2TDNFcFVDZ2dFQkFORlJqRGZHRmZZblpEQldsOU9iVFhLU00vdW4rU3ZHUHlJM1NNcVBjZi92CnpTNmhDelVkb0IyUE51b1hnZlI5UHJ0azhOeDB1NGxYbi9LMUxzUU5zcjNUL3NEMTNYYUt1NmcwUkNlaEI5V1oKamtnZkNEU1QwTUdibC9VZCtKK3NFd0pqVTJ2RlhXWnRtRGxIbDY1QVVVRzVKZVQ2SkUrYzA0VkdnNnkxS3FCNApZU2UxMWwvVWorZkZJSXVUbG02Smc2NFhGOU9GV3VlMGJNSnpybmtoUkF1N3Y1bFJNd1kwRjlzR2k4ZDNoN1hrCkpIVHFUb01IVmk5SzkyQWh1YUwra0VvNldjMWY5YllWSE4vcS90Z2VYRXB5Mlo5cHBUYytwcTlmby9vQjFWM0YKdTB2S1pZTEc1c0FCZzBjeUgwQW44RlhNMHdzcURqdUUzWTdwT1I0TGh1MENnZ0VBVkY1cG9QeFdyTFVTSVplSApYei9RMkQ4WlV6U3RqVDFiRklzK2pGZ0dLVS9WMlk2WWV5b0ExVFd2VzY1Z05XOFFqVEV2bVpkdkpUQWNKZ1ZpCktDbmE3NDVpeVBLM2c1Q0NZTG41WjRHSmt1WkdzdTFIQndURmFnVW5WY2RWZzNoZDNERWZjYmUycWpRajBpSTcKeW9JVW9KMHlWRHUzUUFLRVN0b01zRUI2OVNXZGE2ZGR4Z2VlV0R1YkhiQkNQODVXTnkxeTZsdzJLWDdqNjUrTApqeHE5R3ovamgrM1ppSjN6cjVxYmFlU2pzZkJOUURqMmF6RXFObXlWbVdWQmlsOFdoQTBZdHZEUE1VclRlSnFMCk9wRVVpN1VYVmM1QUpKMkpuOWYvZ0hqSjZpUTVmbGtnQ0FWbTJDeS9aaWF3b282SW92SDhKYmhCV3dsZ0JVa1oKODN6V1FRS0NBUUFQT24rWkR6QkoyRlBSc0hzYlNoRTRaS3FqaEhUOFdrLzlqVWdlZEpFMnJadWY2TmVINWIvZwpacXI0SFAyM2ErVkVmUE9KRm5VT2FQR2FGdFJ3THc3eUFKcG9MM3NOUk1xaVVpc2pOdlA2OWxFRHJqNUtsUFo3CkgzYk92bjk0SG16RG43WlNBT25xcWM2SlhFd013V0VvQnZCYTJGZ0w4cnp3MVZCL0lDOFp2YWhUMjBiZGNmbUcKUXpFNjltSGJhT1hMcEtKM0lSeWIvdVJxd1QvUVVEdERIMFd4UWRjVWZIVy8yWm9SeVFCMm0wS0x2d0EzU0RGYwovM2MvNXpRNlI0cjMyNGJ0Q2k0Mk1STUl0M0FUQ1NKdHlDMU5DOEtaWWxWK0xOY2hPVURzc1pZT3pZclZHT053CjFLdFlZcTBqWGNSK2VZaGhKNDRoaG1rWUhKK3JMK3VCQW9JQkFRQ2Z1T25VeGNIcFdVMThrcUZIWXNUb1lzakQKdE1xdTN0SHJPNEplMTgrdzN3dTBxOW1kZ3pkaWNkeUpuczFCanNUVGJWRi9tUEdIZDRVbTByY2hQdFhtQldOVApTdVFwMFFlY3luUHBhZHpFUk4vUXBBTEdFUWQ5S1Fpd1BvbG5Jb2Z4bWlWK2htZGJBSElNWmRlbEhtb3FVOHFvClpuY0xvYTNlVEk5Wk8yM0VyL2hTeUN6TVl1S3NQSjF4VUVPYUZpa2VRM3RPRWwwU050RklZME55dXIrTTlrbHQKbUFVMnA1UUl5VmlseTlpSnJvVWZWMnBoSWdjLzJVMHNRR0hJOU1aZ2lVU2ZUTVZpWFpqWDEvZFZHdVUrT1FYUwpqUUVTK3pNQ2kyRWNoK1k5N1dsMlBVRmNhVzRPdk9qQ1JMQmx6bis4RW1sckRDYTdjTHVweGhqZXhnNXUKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K

---

kind: Ingress
apiVersion: networking.k8s.io/v1beta1
metadata:
  name: ci
  labels:
    app: ci
  # annotations:
spec:
  tls:
  - hosts:
    - git.t.khs1994.com
    - drone.t.khs1994.com
    - drone-kubenative.t.khs1994.com
    - drone-runner-kubernetes.t.khs1994.com
    - drone-runner-docker.t.khs1994.com
    - s3.t.khs1994.com
    secretName: ingress-nginx-tls-0.0.1
  rules:
  - host: git.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: gogs
          servicePort: http
  - host: drone.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: drone
          servicePort: http
  - host: drone-kubenative.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: drone-kubenative
          servicePort: http
  - host: drone-runner-kubernetes.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: drone-runner-kubernetes-dashboard
          servicePort: dashboard
  - host: drone-runner-docker.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: drone-runner-docker-dashboard
          servicePort: dashboard
  - host: s3.t.khs1994.com
    http:
      paths:
      - path: /
        backend:
          serviceName: minio
          servicePort: http
